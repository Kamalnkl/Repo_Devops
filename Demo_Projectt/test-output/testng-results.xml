<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-08-16T15:35:50 IST" name="Default suite" finished-at="2020-08-16T15:36:45 IST" duration-ms="54898">
    <groups>
    </groups>
    <test started-at="2020-08-16T15:35:50 IST" name="Default test" finished-at="2020-08-16T15:36:45 IST" duration-ms="54898">
      <class name="test.Configure">
        <test-method is-config="true" signature="initilization()[pri:0, instance:test.Configure@2bbf180e]" started-at="2020-08-16T15:35:50 IST" name="initilization" finished-at="2020-08-16T15:36:44 IST" duration-ms="53826" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilization -->
        <test-method signature="titletest()[pri:1, instance:test.Configure@2bbf180e]" started-at="2020-08-16T15:36:44 IST" name="titletest" finished-at="2020-08-16T15:36:44 IST" duration-ms="28" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [A fresh approach to customer engagement] but found [A fresh approach to ustomer engagement]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [A fresh approach to customer engagement] but found [A fresh approach to ustomer engagement]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at test.Configure.titletest(Configure.java:68)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- titletest -->
        <test-method signature="logotest()[pri:2, instance:test.Configure@2bbf180e]" started-at="2020-08-16T15:36:44 IST" name="logotest" finished-at="2020-08-16T15:36:45 IST" duration-ms="216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logotest -->
        <test-method is-config="true" signature="close()[pri:0, instance:test.Configure@2bbf180e]" started-at="2020-08-16T15:36:45 IST" name="close" finished-at="2020-08-16T15:36:45 IST" duration-ms="785" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- test.Configure -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
